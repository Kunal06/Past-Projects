/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package overtimemanagement;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import static overtimemanagement.ReadWrite.userid;

/**
 *
 * @author User
 */
public class AddProject extends javax.swing.JPanel {

    public String date;
    public String ID;
    public String pmid;

    Connection conn = new DBconnect().connect();

    /**
     * Creates new form AddProject
     */
    public AddProject() {
        initComponents();
        load();

    }

    private void load() {
        //Add ID
        ID = userid("projectID.txt");
        id.setText(ID);

        //Add Date
        date = DateTime.getTodayDate();
        dat.setText(date);

        // Set ID fields invisible
        id.setVisible(false);
        idd.setVisible(false);

        proj.setText("");
        pm.removeAllItems();
        pm.addItem("Select Project Manager");

        
        /*try {
         FileReader fileuser = new FileReader("userfile.txt");
         BufferedReader userfile = new BufferedReader(fileuser);
         String r = "";

         while ((r = userfile.readLine()) != null) {

         StringTokenizer userdata = new StringTokenizer(r, ",");

         String ID = userdata.nextToken();
         String firstname = userdata.nextToken();
         String lastname = userdata.nextToken();
         String dept = userdata.nextToken().trim();
         String salary = userdata.nextToken();
         String phone = userdata.nextToken();
         String email = userdata.nextToken();
         String user = userdata.nextToken();
         String pass = userdata.nextToken();
         String fingerprint = userdata.nextToken();

         if (dept.equals("Project Manager")) {
         pm.addItem(lastname + "," + firstname);
         }

         }

         } catch (Exception h) {
         h.printStackTrace();
         }*/
        try {
            PreparedStatement pa = conn.prepareStatement("select lastname,firstname from users where Department=?");
            pa.setString(1, "Project Manager");
            ResultSet rs = pa.executeQuery();
            System.out.println(rs);
            while (rs.next()) {
                String ln = rs.getString("Lastname");
                String fn = rs.getString("Firstname");
                pm.addItem(ln + "," + fn);
            }

        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        proj = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        saveproj = new javax.swing.JButton();
        pm = new javax.swing.JComboBox();
        dat = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        idd = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Add New Project");

        jLabel2.setText("Project Name");

        jLabel3.setText("Project Manager");

        saveproj.setText("Save");
        saveproj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveprojActionPerformed(evt);
            }
        });

        pm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmActionPerformed(evt);
            }
        });

        dat.setText("Current Date");

        id.setText("Autogenerated");

        idd.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(502, 502, 502)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(534, 534, 534)
                        .addComponent(saveproj, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(471, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idd, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(proj, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pm, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(414, 414, 414))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(dat, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(dat)
                .addGap(70, 70, 70)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idd)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(proj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(saveproj, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pmActionPerformed

    private void saveprojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveprojActionPerformed
        String projname = proj.getText();
        String projman = "" + pm.getSelectedItem();
        String[] projmanager = projman.split(",");

        if (projname.equals("")) {
            JOptionPane.showMessageDialog(null, "Project Name Required");
        } else if (projman.equals("")) {
            JOptionPane.showMessageDialog(null, "Select Project Manager");
        } else {
           
                try {
                    PreparedStatement pa = conn.prepareStatement("select autoid from users where firstname=? and lastname=?");

                    pa.setString(1, projmanager[1]);
                    pa.setString(2, projmanager[0]);
                    ResultSet rs = pa.executeQuery();
                    while (rs.next()) {
                        int PMID = rs.getInt("autoid");
                        PreparedStatement addproj = conn.prepareStatement("insert into Project (userid,Projectname,Projectdate) values (?,?,?)");
                        addproj.setInt(1, PMID);
                        addproj.setString(2, projname);
                        addproj.setString(3, date);
                        int i = addproj.executeUpdate();

                        if (i > 0) {
                            JOptionPane.showMessageDialog((null), "saved");
                        } else {
                            JOptionPane.showMessageDialog((null), "not saved");
                        }
                    }

                
                /*FileReader fileuser = new FileReader("userfile.txt");
                 BufferedReader userfile = new BufferedReader(fileuser);
                 String r = "";

                 while ((r = userfile.readLine()) != null) {

                 StringTokenizer userdata = new StringTokenizer(r, ",");

                 String ID = userdata.nextToken();
                 String firstname = userdata.nextToken();
                 String lastname = userdata.nextToken();
                 String dept = userdata.nextToken().trim();
                 String salary = userdata.nextToken();
                 String phone = userdata.nextToken();
                 String email = userdata.nextToken();
                 String user = userdata.nextToken();
                 String pass = userdata.nextToken();
                 String fingerprint = userdata.nextToken();

                 if (projmanager[0].equals(lastname)) {
                 if (projmanager[1].equals(firstname)) {
                 pmid = ID;
                 }
                 }
                 }*/

            } catch (Exception h) {
                h.printStackTrace();
            }

            //String data = pmid + "," + ID + "," + projname + "," + date;

            //WriteToFile("project.txt", "projectID.txt", data, ID);
            load();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_saveprojActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dat;
    private javax.swing.JTextField id;
    private javax.swing.JLabel idd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox pm;
    private javax.swing.JTextField proj;
    private javax.swing.JButton saveproj;
    // End of variables declaration//GEN-END:variables
}
