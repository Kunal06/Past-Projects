/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package overtimemanagement;

import java.awt.event.KeyEvent;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static overtimemanagement.Fieldsdata.autocapitalizefirstletter;
import static overtimemanagement.Fieldsdata.onlyint;
import overtimemanagement.ReadWriteDatabase;
import static overtimemanagement.ReadWrite.ReadFromuserFiletoTable;
import static overtimemanagement.ReadWrite.WriteToFile;
import static overtimemanagement.ReadWrite.userid;

/**
 *
 * @author User
 */
public class EditUserDetails extends javax.swing.JPanel {

    public char[] Pa;
    public String ID;
    public String date;
    DefaultTableModel Model;
    Connection conn = new DBconnect().connect();

    /**
     * Creates new form EditUserDetails
     */
    public EditUserDetails() {
        initComponents();
        Model = (DefaultTableModel) res.getModel();

        load();
        //ReadFromuserFiletoTable(Model);
        ReadFromuserFiletoTabledatabase(Model);

    }

    private void ReadFromuserFiletoTabledatabase(DefaultTableModel Model) {
        Model.setRowCount(0);

        String sql = "select * from users";

        try {
            PreparedStatement pa = conn.prepareStatement(sql);
            ResultSet rs = pa.executeQuery();
            while (rs.next()) {
                Model.insertRow(Model.getRowCount(), new Object[]{rs.getInt("autoid"), rs.getString("Firstname"), rs.getString("Lastname"), rs.getString("Department"), rs.getString("Salary"), rs.getString("Phone"), rs.getString("Email"), rs.getString("username"), rs.getString("Password"), rs.getString("Fingerprint")});

            }
        } catch (Exception c) {
        }
    }

    private void unallowedit() {
        edit.setEnabled(true);
        fname.setEnabled(false);
        lname.setEnabled(false);
        dept.setEnabled(false);
        sal.setEnabled(false);
        ph.setEnabled(false);
        em.setEnabled(false);
        user.setEnabled(false);
        pas.setEnabled(false);
        fing.setEnabled(false);
        res.setEnabled(true);

    }

    private void allowedit() {
        edit.setEnabled(false);
        fname.setEnabled(true);
        lname.setEnabled(true);
        dept.setEnabled(true);
        sal.setEnabled(true);
        ph.setEnabled(true);
        em.setEnabled(true);
        user.setEnabled(true);
        pas.setEnabled(true);
        fing.setEnabled(true);
        res.setEnabled(false);

    }

    private void load() {
        unallowedit();

        //Add Departments to Combobox
        dept.removeAllItems();
        dept.addItem("No User Selected");

        //Add autogenerated ID
        id.setVisible(false);
        idd.setVisible(false);

        //Place Current Date 
        date = DateTime.getTodayDate();
        dat.setText(date);

        //reset all fields
        fname.setText("First");
        lname.setText("Last");
        sal.setText("");
        ph.setText("");
        em.setText("");
        user.setText("");
        pas.setText("");

    }

    private void GetDataCheckthenaddtotable() {
        //Get DATA from fields
        ID = id.getText();
        String email = em.getText();
        Email useremail = new Email(email);
        String valid = useremail.validateEmailAddress();
        String firstname = fname.getText();
        String lastname = lname.getText();
        String phone = ph.getText();
        String salary = sal.getText();
        String username = user.getText();
        String department = "" + dept.getSelectedItem();
        String fingerprint = fing.getText();
        Pa = pas.getPassword();
        String Password = "";
        System.out.println(Password);
        for (int i = 0; i < Pa.length; i++) {
            Password += Pa[i];
        }
        String data = ID + "," + firstname + "," + lastname + "," + department + "," + salary + "," + phone + "," + email + "," + username + "," + Password + "," + fingerprint;

        //Check Validity
        if (firstname.equals("") || firstname.equals("First")) {
            JOptionPane.showMessageDialog(null, "First name is required");
        }
        if (lastname.equals("") || lastname.equals("Last")) {
            JOptionPane.showMessageDialog(null, "Last name is required");
        } else if (department.equals("Select Department")) {
            JOptionPane.showMessageDialog(null, "Department needs to be selected");
        } else if (phone.equals("")) {
            JOptionPane.showMessageDialog(null, "Phone no. is required");
        } else if (salary.equals("")) {
            JOptionPane.showMessageDialog(null, "Salary is required");
        } else if (valid.equals("Invalid Email Address")) {
            JOptionPane.showMessageDialog(null, valid);
        } else if (username.equals("")) {
            JOptionPane.showMessageDialog(null, "Username is required");
        } else if (Password.equals("")) {
            JOptionPane.showMessageDialog(null, "Password is required");
        } else {
            int n = JOptionPane.showConfirmDialog(null, "Would you like to save the data?", "SAVE DATA", JOptionPane.YES_NO_OPTION);
            //no is 1 and yes is 0

            if (n == 1) {
                JOptionPane.showMessageDialog(null, "You said no.");

            }
            if (n == 0) {
                //ADD back to row in table
                Model.setValueAt(ID, res.getSelectedRow(), 0);
                Model.setValueAt(firstname, res.getSelectedRow(), 1);
                Model.setValueAt(lastname, res.getSelectedRow(), 2);
                Model.setValueAt(department, res.getSelectedRow(), 3);
                Model.setValueAt(salary, res.getSelectedRow(), 4);
                Model.setValueAt(phone, res.getSelectedRow(), 5);
                Model.setValueAt(email, res.getSelectedRow(), 6);
                Model.setValueAt(username, res.getSelectedRow(), 7);
                Model.setValueAt(Password, res.getSelectedRow(), 8);
                Model.setValueAt(fingerprint, res.getSelectedRow(), 9);

                load();
            }
        }
    }

    private void SavetouserFilefromTable(DefaultTableModel Model) {

        try {
            PreparedStatement del = conn.prepareStatement("DELETE FROM users");
            int delete = del.executeUpdate();
            
            PreparedStatement pa = conn.prepareStatement("insert into users(Firstname,Lastname,Department,Salary,Phone,Email,username,password,Fingerprint) values (?,?,?,?,?,?,?,?,?)");
            for (int i = 0; i < Model.getRowCount(); i++) {

                String ID = "" + Model.getValueAt(i, 0);
                String firstname = "" + Model.getValueAt(i, 1);
                String lastname = "" + Model.getValueAt(i, 2);
                String department = "" + Model.getValueAt(i, 3);
                String salary = "" + Model.getValueAt(i, 4);
                String phone = "" + Model.getValueAt(i, 5);
                String email = "" + Model.getValueAt(i, 6);
                String username = "" + Model.getValueAt(i, 7);
                String Password = "" + Model.getValueAt(i, 8);
                String fingerprint = "" + Model.getValueAt(i, 9);

                pa.setString(1, firstname);
                pa.setString(2, lastname);
                pa.setString(3, department);
                pa.setString(4, salary);
                pa.setString(5, phone);
                pa.setString(6, email);
                pa.setString(7, username);
                pa.setString(8, Password);
                pa.setString(9, fingerprint);

                pa.executeUpdate();
            }

        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
        String data = "";

        try {
            FileWriter userfw = new FileWriter("userfile.txt", false);
            PrintWriter userfile = new PrintWriter(userfw);

            for (int i = 0; i < Model.getRowCount(); i++) {

                String ID = "" + Model.getValueAt(i, 0);
                String firstname = "" + Model.getValueAt(i, 1);
                String lastname = "" + Model.getValueAt(i, 2);
                String department = "" + Model.getValueAt(i, 3);
                String salary = "" + Model.getValueAt(i, 4);
                String phone = "" + Model.getValueAt(i, 5);
                String email = "" + Model.getValueAt(i, 6);
                String username = "" + Model.getValueAt(i, 7);
                String Password = "" + Model.getValueAt(i, 8);
                String fingerprint = "" + Model.getValueAt(i, 9);

                data += ID + "," + firstname + "," + lastname + "," + department + "," + salary + "," + phone + "," + email + "," + username + "," + Password + "," + fingerprint + "\n";

            }

            userfile.println(data);
            userfile.close();

        } catch (Exception e) {
            e.printStackTrace();

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lname = new javax.swing.JTextField();
        pas = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        ph = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fing = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        em = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        dept = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        sal = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        idd = new javax.swing.JLabel();
        dat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        res = new javax.swing.JTable();
        edit = new javax.swing.JButton();

        lname.setText("Last");
        lname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lnameFocusLost(evt);
            }
        });
        lname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lnameMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Edit User Details");

        ph.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phKeyTyped(evt);
            }
        });

        jLabel2.setText("Name");

        fing.setText("Undecided");

        jLabel7.setText("Phone No.");

        fname.setText("First");
        fname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fnameFocusLost(evt);
            }
        });
        fname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fnameMouseClicked(evt);
            }
        });

        jLabel8.setText("Email Address");

        jLabel4.setText("Department");

        jLabel9.setText("Username");

        jLabel5.setText("Fingerprint");

        jLabel10.setText("Password");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        sal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salKeyTyped(evt);
            }
        });

        id.setText("Autogenerated");

        jLabel11.setText("Salary(dh)");

        idd.setText("ID");

        dat.setText("Current Date");

        res.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Firstname", "Lastname", "Department", "Salary", "Phone no.", "Email", "Username", "Password", "Fingerprints"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        res.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resMouseClicked(evt);
            }
        });
        res.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(res);
        if (res.getColumnModel().getColumnCount() > 0) {
            res.getColumnModel().getColumn(0).setMinWidth(1);
            res.getColumnModel().getColumn(0).setPreferredWidth(1);
            res.getColumnModel().getColumn(0).setMaxWidth(1);
            res.getColumnModel().getColumn(8).setMinWidth(1);
            res.getColumnModel().getColumn(8).setMaxWidth(2);
            res.getColumnModel().getColumn(9).setMinWidth(1);
            res.getColumnModel().getColumn(9).setMaxWidth(2);
        }

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dat, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(ph, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(em, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel2)
                                            .addComponent(idd))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sal, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(88, 88, 88)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(3, 3, 3)
                                            .addComponent(jLabel10)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(pas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(231, 231, 231)
                                .addComponent(jLabel1)))))
                .addContainerGap(410, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dat)
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idd))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(pas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(em, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lnameFocusLost
        autocapitalizefirstletter(lname);
    }//GEN-LAST:event_lnameFocusLost

    private void lnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lnameMouseClicked
        String lastname = lname.getText();
        if (lastname.equals("Last")) {
            lname.setText("");
        }         // TODO add your handling code here:
    }//GEN-LAST:event_lnameMouseClicked

    private void phKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phKeyTyped
        onlyint(evt);
    }//GEN-LAST:event_phKeyTyped

    private void fnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnameFocusLost
        autocapitalizefirstletter(fname);
    }//GEN-LAST:event_fnameFocusLost

    private void fnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnameMouseClicked
        String firstname = fname.getText();
        if (firstname.equals("First")) {
            fname.setText("");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_fnameMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        GetDataCheckthenaddtotable();
        SavetouserFilefromTable(Model);
    }//GEN-LAST:event_saveActionPerformed

    private void salKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salKeyTyped
        onlyint(evt);     // TODO add your handling code here:
    }//GEN-LAST:event_salKeyTyped

    private void resMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resMouseClicked
        ReadfromTable(); // TODO add your handling code here:
    }//GEN-LAST:event_resMouseClicked

    private void resKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resKeyPressed
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_ENTER || c == KeyEvent.VK_PAGE_DOWN || c == KeyEvent.VK_PAGE_UP) {
            ReadfromTable();
        }// TODO add your handling code here:
    }//GEN-LAST:event_resKeyPressed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed

        String department = "" + dept.getSelectedItem();
        if (!(department.equalsIgnoreCase("No User Selected"))) {
            allowedit();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_editActionPerformed

    private void ReadfromTable() {
        String ID = "" + Model.getValueAt(res.getSelectedRow(), 0);
        String firstname = "" + Model.getValueAt(res.getSelectedRow(), 1);
        String lastname = "" + Model.getValueAt(res.getSelectedRow(), 2);
        String department = "" + Model.getValueAt(res.getSelectedRow(), 3);
        String salary = "" + Model.getValueAt(res.getSelectedRow(), 4);
        String phone = "" + Model.getValueAt(res.getSelectedRow(), 5);
        String email = "" + Model.getValueAt(res.getSelectedRow(), 6);
        String username = "" + Model.getValueAt(res.getSelectedRow(), 7);
        String password = "" + Model.getValueAt(res.getSelectedRow(), 8);

        id.setText(ID);
        fname.setText(firstname);
        lname.setText(lastname);

        if (department.equals("Accounts")) {
            dept.removeAllItems();
            dept.addItem("Accounts");
            dept.addItem("Admin");
            dept.addItem("Project Manager");
            dept.addItem("Technician");
        } else if (department.equals("Admin")) {
            dept.removeAllItems();
            dept.addItem("Admin");
            dept.addItem("Accounts");
            dept.addItem("Project Manager");
            dept.addItem("Technician");
        } else if (department.equals("Project Manager")) {
            dept.removeAllItems();
            dept.addItem("Project Manager");
            dept.addItem("Admin");
            dept.addItem("Accounts");
            dept.addItem("Technician");
        } else if (department.equals("Technician")) {
            dept.removeAllItems();
            dept.addItem("Technician");
            dept.addItem("Admin");
            dept.addItem("Accounts");
            dept.addItem("Project Manager");
        }

        sal.setText(salary);
        ph.setText(phone);
        em.setText(email);
        user.setText(username);
        pas.setText(password);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dat;
    private javax.swing.JComboBox dept;
    private javax.swing.JButton edit;
    private javax.swing.JTextField em;
    private javax.swing.JTextField fing;
    private javax.swing.JTextField fname;
    private javax.swing.JTextField id;
    private javax.swing.JLabel idd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JPasswordField pas;
    private javax.swing.JTextField ph;
    private javax.swing.JTable res;
    private javax.swing.JTextField sal;
    private javax.swing.JButton save;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
